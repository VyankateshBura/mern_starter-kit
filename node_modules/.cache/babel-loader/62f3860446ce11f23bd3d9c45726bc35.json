{"ast":null,"code":"var _jsxFileName = \"C:\\\\My projects\\\\mern_starter-kit\\\\src\\\\WrappedListComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport SingleListItem from \"./WrappedSingleListItem\"; // List Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WrappedListComponent = _ref => {\n  _s();\n\n  let {\n    items\n  } = _ref;\n  const [selectedIndex, setSelectedIndex] = useState(false);\n  useEffect(() => {\n    setSelectedIndex(false);\n  }, [items]);\n\n  const handleClick = index => {\n    setSelectedIndex(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    style: {\n      textAlign: 'left'\n    },\n    children: items.map((item, index) => /*#__PURE__*/_jsxDEV(SingleListItem, {\n      onClickHandler: () => handleClick(index),\n      text: item.text,\n      index: index,\n      isSelected: selectedIndex\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n};\n\n_s(WrappedListComponent, \"kTpLdd1bSTJf6y2YmfVxNxsVPDU=\");\n\n_c = WrappedListComponent;\nWrappedListComponent.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    text: PropTypes.string.isRequired\n  }))\n};\nWrappedListComponent.defaultProps = {\n  items: [{\n    text: \"myname\"\n  }]\n};\nconst List = memo(WrappedListComponent);\n_c2 = List;\nexport default List;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WrappedListComponent\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"names":["React","SingleListItem","WrappedListComponent","items","selectedIndex","setSelectedIndex","useState","useEffect","handleClick","index","textAlign","map","item","text","propTypes","PropTypes","arrayOf","shape","string","isRequired","defaultProps","List","memo"],"sources":["C:/My projects/mern_starter-kit/src/WrappedListComponent.jsx"],"sourcesContent":["import React from \"react\";\r\nimport SingleListItem from \"./WrappedSingleListItem\";\r\n\r\n// List Component\r\nconst WrappedListComponent = ({\r\n    items,\r\n  }) => {\r\n    const [selectedIndex,setSelectedIndex] = useState(false);\r\n  \r\n    useEffect(() => {\r\n      setSelectedIndex(false);\r\n    }, [items]);\r\n  \r\n    const handleClick = index => {\r\n      setSelectedIndex(index);\r\n    };\r\n  \r\n    return (\r\n      <ul style={{ textAlign: 'left' }}>\r\n        {items.map((item, index) => (\r\n          <SingleListItem\r\n            onClickHandler={() => handleClick(index)}\r\n            text={item.text}\r\n            index={index}\r\n            key = {index}\r\n            isSelected={selectedIndex}\r\n          />\r\n        ))}\r\n      </ul>\r\n    )\r\n  };\r\n  \r\n  WrappedListComponent.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n      text: PropTypes.string.isRequired\r\n    }))\r\n  };\r\n  \r\n  WrappedListComponent.defaultProps = {\r\n    items: [{text:\"myname\"}],\r\n  };\r\n  \r\n  const List = memo(WrappedListComponent);\r\n  \r\n  export default List;\r\n  "],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,yBAA3B,C,CAEA;;;;AACA,MAAMC,oBAAoB,GAAG,QAErB;EAAA;;EAAA,IAFsB;IAC1BC;EAD0B,CAEtB;EACJ,MAAM,CAACC,aAAD,EAAeC,gBAAf,IAAmCC,QAAQ,CAAC,KAAD,CAAjD;EAEAC,SAAS,CAAC,MAAM;IACdF,gBAAgB,CAAC,KAAD,CAAhB;EACD,CAFQ,EAEN,CAACF,KAAD,CAFM,CAAT;;EAIA,MAAMK,WAAW,GAAGC,KAAK,IAAI;IAC3BJ,gBAAgB,CAACI,KAAD,CAAhB;EACD,CAFD;;EAIA,oBACE;IAAI,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAb,CAAX;IAAA,UACGP,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOH,KAAP,kBACT,QAAC,cAAD;MACE,cAAc,EAAE,MAAMD,WAAW,CAACC,KAAD,CADnC;MAEE,IAAI,EAAEG,IAAI,CAACC,IAFb;MAGE,KAAK,EAAEJ,KAHT;MAKE,UAAU,EAAEL;IALd,GAISK,KAJT;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAaD,CA1BH;;GAAMP,oB;;KAAAA,oB;AA4BJA,oBAAoB,CAACY,SAArB,GAAiC;EAC/BX,KAAK,EAAEY,SAAS,CAACC,OAAV,CAAkBD,SAAS,CAACE,KAAV,CAAgB;IACvCJ,IAAI,EAAEE,SAAS,CAACG,MAAV,CAAiBC;EADgB,CAAhB,CAAlB;AADwB,CAAjC;AAMAjB,oBAAoB,CAACkB,YAArB,GAAoC;EAClCjB,KAAK,EAAE,CAAC;IAACU,IAAI,EAAC;EAAN,CAAD;AAD2B,CAApC;AAIA,MAAMQ,IAAI,GAAGC,IAAI,CAACpB,oBAAD,CAAjB;MAAMmB,I;AAEN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}